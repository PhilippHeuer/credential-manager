plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

group 'com.github.philippheuer.credentialmanager'
description = 'A simple credential manager.'
version = String.valueOf(System.getenv("CI_COMMIT_REF_NAME")).replace("v", "")

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    // SLF4J API
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Commons Lang
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // HTTP Client
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.6.0'

    // Jackson (JSON)
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'

    // Testing
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
}

/**
 * Sources - build a jar with source files
 */
task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds the sourcesJar.', group: 'build') {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc, description: 'Builds the javadocJar.', group: 'build') {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/**
 * Artifacts
 */
artifacts {
    archives sourcesJar
    archives javadocJar
}

/**
 * Deployment
 */
publishing {
    publications {
        mainProject(MavenPublication) {
            from project.components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}

/**
 * Bintray Upload
 */
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mainProject']
    dryRun = false
    publish = true
    pkg {
        // jcenter repository namespace and name
        userOrg = String.valueOf(System.getenv('CI_PROJECT_NAMESPACE')).toLowerCase()
        repo = 'maven'
        name =  String.valueOf(project.name).toLowerCase()
        desc = project.description
        licenses = ['MIT']
        vcsUrl = "https://github.com/PhilippHeuer/credential-manager"
        labels = []
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = "v" + project.version
            released  = new Date()
        }
    }
}
